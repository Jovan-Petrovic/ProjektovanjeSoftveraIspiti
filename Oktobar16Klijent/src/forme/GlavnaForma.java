/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Fakultet;
import domen.Kandidat;
import domen.Prijava;
import domen.StudijskiProgram;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import konstante.Operacije;
import logika.KomunikacijaSaServerom;
import transfer.KlijentskiZahtev;
import transfer.ServerskiOdgovor;

/**
 *
 * @author KORISNIK
 */
public class GlavnaForma extends javax.swing.JFrame {

    Kandidat kandidat;

    /**
     * Creates new form GlavnaForma
     */
    public GlavnaForma(Kandidat kandidat) {
        initComponents();
        this.kandidat = kandidat;
        sreidFormu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jlabKandidat = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jcmbFakultet = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jtxtGodinaUpisa = new javax.swing.JTextField();
        jtxtGodinaDiplomiranja = new javax.swing.JTextField();
        jtxtProsecnaOcena = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jcmbStudProgram = new javax.swing.JComboBox();
        jbtnSacuvajPrijavu = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Kandidat");

        jlabKandidat.setText("jLabel2");

        jLabel3.setText("Zavrsen fakultet:");

        jcmbFakultet.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("Godina upisa");

        jLabel5.setText("Godina diplomirnja");

        jLabel6.setText("Prosecna ocena");

        jLabel7.setText("Prijava za stud. program");

        jcmbStudProgram.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jbtnSacuvajPrijavu.setText("Sacuvaj prijavu");
        jbtnSacuvajPrijavu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSacuvajPrijavuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbtnSacuvajPrijavu, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcmbFakultet, javax.swing.GroupLayout.Alignment.TRAILING, 0, 272, Short.MAX_VALUE)
                            .addComponent(jtxtGodinaUpisa)
                            .addComponent(jtxtGodinaDiplomiranja)
                            .addComponent(jtxtProsecnaOcena)
                            .addComponent(jlabKandidat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jcmbStudProgram, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jlabKandidat))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jcmbFakultet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtxtGodinaUpisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtxtGodinaDiplomiranja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jtxtProsecnaOcena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcmbStudProgram, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jbtnSacuvajPrijavu)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnSacuvajPrijavuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSacuvajPrijavuActionPerformed
        if (jtxtGodinaDiplomiranja.getText().isEmpty() || jtxtGodinaUpisa.getText().isEmpty() || jtxtProsecnaOcena.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Sva polja ,oraju biti popunjena");
            return;
        }
        Fakultet f = (Fakultet) jcmbFakultet.getSelectedItem();
        int godinaUpisa = Integer.parseInt(jtxtGodinaUpisa.getText().trim());
        int godinaDiplomiranja = Integer.parseInt(jtxtGodinaDiplomiranja.getText().trim());
        double prosecnaOcena = Double.parseDouble(jtxtProsecnaOcena.getText().trim());
        StudijskiProgram sp = (StudijskiProgram) jcmbStudProgram.getSelectedItem();
        Date datumPrijave = new Date();
        boolean oslobodjenPrijemnog = false;
        if (f.getNaziv().equalsIgnoreCase("fon") && (godinaDiplomiranja - godinaUpisa) == 4) {
            oslobodjenPrijemnog = true;
        }
        Calendar calendarNow = Calendar.getInstance();
        calendarNow.setTime(datumPrijave);

        KlijentskiZahtev kz1 = new KlijentskiZahtev();
        kz1.setOperacija(Operacije.VRATI_PRIJAVE);
        KomunikacijaSaServerom.getInstanca().posaljiZahtev(kz1);
        ServerskiOdgovor so1 = KomunikacijaSaServerom.getInstanca().primiOdgovor();
        ArrayList<Prijava> listaPrijava = (ArrayList<Prijava>) so1.getOdgovor();
        for (Prijava prijava : listaPrijava) {
            if (kandidat.getKandidatID() == prijava.getKandidat().getKandidatID()) {
                Calendar calendarPrijava = Calendar.getInstance();
                calendarPrijava.setTime(prijava.getDatumPrijave());
                if (calendarNow.get(Calendar.YEAR) == calendarPrijava.get(Calendar.YEAR)) {
                    JOptionPane.showMessageDialog(this, "Samo jedna prijava moze tokom jedne skolske godine");
                    return;
                }
            }
        }

        if (prosecnaOcena < 6 || prosecnaOcena > 10) {
            JOptionPane.showMessageDialog(this, "Prosecna ocena mora biti u intervalu od 1 do 10");
            return;
        }

        if (godinaUpisa >= godinaDiplomiranja) {
            JOptionPane.showMessageDialog(this, "Godina upisa mora biti manja od godine diplomiranja");
            return;
        }

        if (godinaUpisa < 1990 || godinaUpisa > 2016 || godinaDiplomiranja < 1990 || godinaDiplomiranja > 2016) {
            JOptionPane.showMessageDialog(this, "Godina upisa i godina diplomiranja moraju biti u rasponu 1990-2016");
            return;
        }

        Prijava p = new Prijava(-1, godinaUpisa, godinaDiplomiranja, prosecnaOcena, datumPrijave, oslobodjenPrijemnog, f, sp, kandidat);

        KlijentskiZahtev kz2 = new KlijentskiZahtev();
        kz2.setOperacija(Operacije.SACUVAJ);
        kz2.setParametar(p);
        KomunikacijaSaServerom.getInstanca().posaljiZahtev(kz2);
        ServerskiOdgovor so2 = KomunikacijaSaServerom.getInstanca().primiOdgovor();

        JOptionPane.showMessageDialog(this, so2.getPoruka());

    }//GEN-LAST:event_jbtnSacuvajPrijavuActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JButton jbtnSacuvajPrijavu;
    private javax.swing.JComboBox jcmbFakultet;
    private javax.swing.JComboBox jcmbStudProgram;
    private javax.swing.JLabel jlabKandidat;
    private javax.swing.JTextField jtxtGodinaDiplomiranja;
    private javax.swing.JTextField jtxtGodinaUpisa;
    private javax.swing.JTextField jtxtProsecnaOcena;
    // End of variables declaration//GEN-END:variables

    private void sreidFormu() {
        jlabKandidat.setText("<<" + kandidat + ">>");

        KlijentskiZahtev kz1 = new KlijentskiZahtev();
        kz1.setOperacija(Operacije.VRATI_FAKULTETE);
        KomunikacijaSaServerom.getInstanca().posaljiZahtev(kz1);
        ServerskiOdgovor so1 = KomunikacijaSaServerom.getInstanca().primiOdgovor();
        ArrayList<Fakultet> listaFakulteta = (ArrayList<Fakultet>) so1.getOdgovor();
        jcmbFakultet.removeAllItems();
        for (Fakultet fakultet : listaFakulteta) {
            jcmbFakultet.addItem(fakultet);
        }

        KlijentskiZahtev kz2 = new KlijentskiZahtev();
        kz2.setOperacija(Operacije.VRATI_PROGRAME);
        KomunikacijaSaServerom.getInstanca().posaljiZahtev(kz2);
        ServerskiOdgovor so2 = KomunikacijaSaServerom.getInstanca().primiOdgovor();
        ArrayList<StudijskiProgram> listaPrograma = (ArrayList<StudijskiProgram>) so2.getOdgovor();
        jcmbStudProgram.removeAllItems();
        for (StudijskiProgram studijskiProgram : listaPrograma) {
            jcmbStudProgram.addItem(studijskiProgram);
        }
    }
}
